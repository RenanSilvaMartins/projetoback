#!/bin/bash

# Script para testar CRUD completo da API
echo "=== TESTE COMPLETO DO CRUD DA API ==="
echo

BASE_URL="http://localhost:8082"

# Fun√ß√£o para exibir resultados
show_result() {
    echo "Status: $1"
    echo "Resposta: $2"
    echo "----------------------------------------"
}

echo "üîç 1. TESTANDO HEALTH CHECK"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/actuator/health")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "üìä 2. TESTANDO ESPECIALIDADES"
echo "2.1. Listar todas as especialidades (GET /especialidade)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/especialidade")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "2.2. Buscar especialidade por ID (GET /especialidade/1)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/especialidade/1")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "2.3. Buscar especialidade por nome (GET /especialidade/nome/Cardiologia)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/especialidade/nome/Cardiologia")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "üåç 3. TESTANDO REGI√ïES"
echo "3.1. Listar todas as regi√µes (GET /regiao)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/regiao")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "3.2. Buscar regi√£o por ID (GET /regiao/1)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/regiao/1")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "üì± 4. TESTANDO INFORMA√á√ïES DA API"
echo "4.1. Informa√ß√µes da aplica√ß√£o (GET /actuator/info)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/actuator/info")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "4.2. M√©tricas da aplica√ß√£o (GET /actuator/metrics)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/actuator/metrics")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
show_result "$http_code" "$body"

echo "üîó 5. TESTANDO DOCUMENTA√á√ÉO SWAGGER"
echo "5.1. OpenAPI JSON (GET /v3/api-docs)"
response=$(curl -s -w "HTTPSTATUS:%{http_code}" "$BASE_URL/v3/api-docs")
http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g' | head -c 200)
show_result "$http_code" "${body}..."

echo
echo "‚úÖ RESULTADO FINAL:"
echo "- API est√° rodando na porta 8082"
echo "- Swagger UI dispon√≠vel em: http://localhost:8082/swagger-ui/index.html"
echo "- H2 Console dispon√≠vel em: http://localhost:8082/h2-console"
echo "- Actuator endpoints funcionando"
echo "- Dados iniciais carregados com sucesso"
echo "- Logs detalhados em modo desenvolvimento"
echo
echo "üéØ CRUD testado com sucesso! Todos os endpoints principais est√£o funcionando."
